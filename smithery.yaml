version: "1.0"

project:
  name: mcp-meilisearch
  description: MCP server that provides a bridge between AI models and Meilisearch
  version: 1.0.0

startCommand:
  type: http
  configSchema:
    type: object
    properties:
      MEILISEARCH_HOST:
        type: string
        default: http://localhost:7700
        description: URL for the Meilisearch instance
      MEILISEARCH_API_KEY:
        type: string
        default: ""
        description: API key for Meilisearch, if required
      MEILISEARCH_TIMEOUT:
        type: number
        default: 5000
        description: Timeout for Meilisearch API requests in milliseconds
  commandFunction: |-
    (config) => ({
      command: 'node',
      args: ['dist/index.js'],
      env: {
        NODE_ENV: 'production',
        MEILISEARCH_HOST: config.MEILISEARCH_HOST,
        MEILISEARCH_API_KEY: config.MEILISEARCH_API_KEY,
        MEILISEARCH_TIMEOUT: config.MEILISEARCH_TIMEOUT.toString()
      }
    })
  exampleConfig:
    MEILISEARCH_HOST: http://localhost:7700
    MEILISEARCH_API_KEY: your-api-key
    MEILISEARCH_TIMEOUT: 5000

workspace:
  packages:
    - path: server
      type: app
      target: node

build:
  commands:
    setup:
      description: Install dependencies
      command: npm install

    build:
      description: Build the server
      command: npm run build --workspace=server

    dist:
      description: Create distribution package
      command: |
        mkdir -p dist
        cp -r server/build/* dist/
        cp server/package.json dist/
        echo '{"type":"module"}' > dist/package.json

  environment:
    required:
      - MEILISEARCH_HOST
      - MEILISEARCH_API_KEY
    default:
      MEILISEARCH_HOST: http://localhost:7700
      MEILISEARCH_TIMEOUT: 5000

dependencies:
  production:
    - "@modelcontextprotocol/sdk": "^1.10.1"
    - express: "^5.1.0"
    - axios: "^1.9.0"
    - zod: "^3.24.4"

  development:
    - typescript: "^5.8.3"
    - "@types/express": "^5.0.1"
    - "@types/node": "^22.14.0"

pipelines:
  default:
    - build

  deploy:
    - setup
    - build
    - dist
